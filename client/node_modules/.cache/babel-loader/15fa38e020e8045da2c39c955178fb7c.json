{"ast":null,"code":"var _jsxFileName = \"/Users/vick/Documents/GitHub/crown-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\nimport { CartDropdownContainer, CartDropdownButton, EmptyMessageContainer, CartItemsContainer } from \"./cart-dropdown.styles\"; //dispatch is automatically made available through the use of connect. there is no need to call matchDispatchToProps\n//to get the 'hidden' toggle. We can just use 'dispatch' as a prop. However, I have added in the code below to make it clearer\n\nconst CartDropDown = ({\n  cartItems,\n  history,\n  toggleCartHidden\n}) => /*#__PURE__*/React.createElement(CartDropdownContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CartItemsContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 11\n  }\n})) : /*#__PURE__*/React.createElement(EmptyMessageContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CartDropdownButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    toggleCartHidden();\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropDown));","map":{"version":3,"sources":["/Users/vick/Documents/GitHub/crown-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CartItem","selectCartItems","toggleCartHidden","CartDropdownContainer","CartDropdownButton","EmptyMessageContainer","CartItemsContainer","CartDropDown","cartItems","history","length","map","cartItem","id","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,qBAHF,EAIEC,kBAJF,QAKO,wBALP,C,CAOA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBP,EAAAA;AAAtB,CAAD,kBACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGM,SAAS,CAACE,MAAV,GACCF,SAAS,CAACG,GAAV,CAAeC,QAAD,iBACZ,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,gBAKC,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADF,eAUE,oBAAC,kBAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbH,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACAZ,IAAAA,gBAAgB;AACjB,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF;;AAsBA,MAAMa,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CU,EAAAA,SAAS,EAAEP;AADoC,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,gBAAgB,EAAE,MAAMe,QAAQ,CAACf,gBAAgB,EAAjB;AADQ,CAAf,CAA3B;;AAIA,eAAeH,UAAU,CACvBF,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,YAA7C,CADuB,CAAzB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\n\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\n\nimport {\n  CartDropdownContainer,\n  CartDropdownButton,\n  EmptyMessageContainer,\n  CartItemsContainer,\n} from \"./cart-dropdown.styles\";\n\n//dispatch is automatically made available through the use of connect. there is no need to call matchDispatchToProps\n//to get the 'hidden' toggle. We can just use 'dispatch' as a prop. However, I have added in the code below to make it clearer\n\nconst CartDropDown = ({ cartItems, history, toggleCartHidden }) => (\n  <CartDropdownContainer>\n    <CartItemsContainer>\n      {cartItems.length ? (\n        cartItems.map((cartItem) => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <EmptyMessageContainer>Your cart is empty</EmptyMessageContainer>\n      )}\n    </CartItemsContainer>\n    <CartDropdownButton\n      onClick={() => {\n        history.push(\"/checkout\");\n        toggleCartHidden();\n      }}\n    >\n      GO TO CHECKOUT\n    </CartDropdownButton>\n  </CartDropdownContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden()),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CartDropDown)\n);\n"]},"metadata":{},"sourceType":"module"}